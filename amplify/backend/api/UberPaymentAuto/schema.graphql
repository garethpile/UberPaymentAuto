type DriverStatements @model @auth(rules: [{allow: public}]) @key(name: "byUberDriver", fields: ["uberdriverID"]) {
  id: ID!
  uberdriverID: ID
  creationDate: AWSDate
  documentLink: String
}

type UberDriver @model @auth(rules: [{allow: public}]) {
  id: ID!
  firstName: String
  lastName: String
  uberId: String
  UberTransactions: [UberTransactions] @connection(keyName: "byUberDriver", fields: ["id"])
  DriverTransactions: [DriverTransactions] @connection(keyName: "byUberDriver", fields: ["id"])
  DriverStatements: [DriverStatements] @connection(keyName: "byUberDriver", fields: ["id"])
}

type DriverTransactions @model @auth(rules: [{allow: public}]) @key(name: "byUberDriver", fields: ["uberdriverID"]) {
  id: ID!
  date: AWSDate
  description: String
  amount: Float
  reviewed: Int
  uberdriverID: ID
}

type UberTransactions @model @auth(rules: [{allow: public}]) @key(name: "byUberDriver", fields: ["uberdriverID"]) {
  id: ID!
  total: Float
  trips: Int
  questPromotion: Float
  fare: Float
  waitTime: Float
  tip: Float
  toll: Float
  cashCollection: Float
  uberFee: Float
  cancellation: Float
  payouts: Float
  adjustedFare: Float
  date: AWSDate
  uberdriverID: ID
}
